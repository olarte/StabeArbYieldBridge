// Updated 1Inch Fusion+ integration for Ethereum Sepolia
async function execute1InchFusionOnSepoliaWithWallet(params) {
  try {
    const sepoliaFusionConfig = CHAIN_CONFIG.ethereum.fusion;
    
    // Prepare 1Inch Fusion+ order for Sepolia
    const fusionOrder = {
      makerAsset: params.tokenIn,
      takerAsset: params.tokenOut,
      makingAmount: ethers.parseUnits(params.amountIn.toString(), 18).toString(),
      takingAmount: '1', // Will be filled by resolver
      maker: params.walletAddress,
      receiver: params.walletAddress,
      allowedSender: '0x0000000000000000000000000000000000000000',
      interactions: '0x',
      expiry: Math.floor(Date.now() / 1000) + 1800, // 30 minutes
      salt: randomBytes(32).toString('hex'),
      chainId: 11155111 // Sepolia chain ID
    };

    console.log(`ðŸš€ Preparing Fusion+ order on Sepolia: ${params.tokenIn} â†’ ${params.tokenOut}`);

    // Generate swap transaction data for Sepolia
    const swapTransactionData = {
      to: CHAIN_CONFIG.ethereum.uniswap.router,
      data: new ethers.Interface([
        'function exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160)) external payable returns (uint256)'
      ]).encodeFunctionData('exactInputSingle', [{
        tokenIn: params.tokenIn,
        tokenOut: params.tokenOut,
        fee: 3000, // 0.3%
        recipient: params.walletAddress,
        deadline: Math.floor(Date.now() / 1000) + 1800,
        amountIn: ethers.parseUnits(params.amountIn.toString(), 18),
        amountOutMinimum: ethers.parseUnits((params.amountIn * 0.99).toString(), 18),
        sqrtPriceLimitX96: 0
      }]),
      value: '0',
      gasLimit: '300000',
      gasPrice: await ethProvider.getGasPrice()
    };

    return {
      message: '1Inch Fusion+ swap prepared for Ethereum Sepolia',
      fusionOrder,
      transactionData: swapTransactionData,
      requiresWalletSignature: true,
      estimatedOutput: (params.amountIn * 0.997).toString(),
      route: '1Inch Fusion+ â†’ Uniswap V3 (Sepolia)',
      relayerUrl: sepoliaFusionConfig.relayerUrl,
      chainId: 11155111,
      nextAction: 'SIGN_AND_SUBMIT_SEPOLIA_SWAP'
    };

  } catch (error) {
    throw new Error(`1Inch Fusion+ Sepolia swap failed: ${error.message}`);
  }
}